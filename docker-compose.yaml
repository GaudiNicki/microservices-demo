services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-amigoscode}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      PGDATA: /data/postgres
    volumes:
      - type: volume
        source: postgres
        target: /data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - type: volume
        source: pgadmin
        target: /var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  eureka-service:
    container_name: eureka-service
    image: microservices-demo/eureka-service
    volumes:
      - type: volume
        source: eureka-service
        target: /var/lib/eureka-service
    ports:
      - "8761:8761"
    networks:
      - postgres
    restart: unless-stopped

  fraud-service:
    container_name: fraud-service
    image: microservices-demo/fraud-service
    volumes:
      - type: volume
        source: fraud-service
        target: /var/lib/fraud-service
    ports:
      - "8081:8081"
    networks:
      - postgres
    restart: unless-stopped

  customer-service:
    container_name: customer-service
    image: microservices-demo/customer-service
    volumes:
      - type: volume
        source: customer-service
        target: /var/lib/customer-service
    ports:
      - "8080:8080"
    networks:
      - postgres
    restart: unless-stopped

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  eureka-service:
  customer-service:
  fraud-service:
